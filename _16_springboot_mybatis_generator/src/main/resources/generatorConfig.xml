<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">

<generatorConfiguration>
    <!-- 导入配置文件 -->
    <properties resource="application.properties"/>

    <!-- defaultModelType="flat" 设置复合主键时不单独为主键创建实体 -->

    <context id="MySql" defaultModelType="flat" targetRuntime="MyBatis3Simple">

        <!-- 生成的POJO实现java.io.Serializable接口 -->
        <plugin type="org.mybatis.generator.plugins.SerializablePlugin" />


        <!--  通过type指定自定义的注释 -->
        <!-- 自定义注释生成器 -->
        <commentGenerator type="com.xf._16_springboot_mybatis_generator.util.generator.config.CommentGeneratorField">
            <property name="author" value="remaindertime(xiongfeng)"/>
            <property name="dateFormat" value="yyyy/MM/dd HH:mm"/>
        </commentGenerator>


        <!-- 数据库连接，直接通过${}读取application.properties里的配置 -->
        <jdbcConnection
                driverClass="${spring.datasource.driver-class-name}"
                connectionURL="${spring.datasource.url}"
                userId="${spring.datasource.username}"
                password="${spring.datasource.password}"/>

        <!-- 生成POJO对象，并将类放到com.xf._16_springboot_mybatis_generator包下 -->
        <javaModelGenerator targetPackage="com.xf._16_springboot_mybatis_generator.pojo" targetProject="src/main/java"></javaModelGenerator>
        <!-- 生成mapper xml文件，并放到resources下的mapper文件夹下 -->
        <sqlMapGenerator targetPackage="mapper"  targetProject="src/main/resources"></sqlMapGenerator>
        <!-- 生成mapper xml对应dao接口，放到com.xf._16_springboot_mybatis_generator包下-->
        <javaClientGenerator targetPackage="com.xf._16_springboot_mybatis_generator.mapper" targetProject="src/main/java" type="XMLMAPPER"></javaClientGenerator>

        <!-- table标签可以有多个，至少一个，tableName指定表名，可以使用_和%通配符 -->
        <table tableName="t_user" domainObjectName="User">
            <!-- 是否只生成POJO对象 -->
            <property name="modelOnly" value="false"/>
            <!-- 数据库中表名有时我们都会带个前缀，而实体又不想带前缀，这个配置可以把实体的前缀去掉 -->
            <!--<domainObjectRenamingRule searchString="^T" replaceString=""/>-->

        </table>
    </context>
</generatorConfiguration>
